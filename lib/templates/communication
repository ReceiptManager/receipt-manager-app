sendImage(File imageFile) async {
    try {
      var stream =
      new http.ByteStream(DelegatingStream.typed(imageFile.openRead()));
      var length = await imageFile.length();
      var url = "https://192.168.0.103:5000/api/upload/";
      var request = new http.MultipartRequest("POST", Uri.parse(url));
      var multipartFile = new http.MultipartFile('file', stream, length,
          filename: basename(imageFile.path));

      request.files.add(multipartFile);
      var response = await request.send();
      print(response.statusCode);
      response.stream.transform(utf8.decoder).listen((value) {
        print(value);
      });

      Navigator.push(
        this.context,
        MaterialPageRoute(
          builder: (context) => DisplayPictureScreen(imagePath: imageFile.path),
        ),
      );
    } catch (e) {
      var title = "Error occur";
      var msg = e.toString();
      if (e is SocketException) {
        title = "Connection refused";
      }

      print(e.toString());
      Widget okButton = FlatButton(
        child: Text("OK"),
        onPressed: () {
          Navigator.of(this.context).pop();
        },
      );

      AlertDialog alert = AlertDialog(
        title: Text(title),
        content: Text(msg),
        actions: [
          okButton,
        ],
      );

      showDialog(
        context: this.context,
        builder: (BuildContext context) {
          return alert;
        },
      );
    }
  }